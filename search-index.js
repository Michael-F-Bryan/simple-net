var N=null,E="",T="t",U="u",searchIndex={};
var R=["simple_net","usize","tensor","result","to_owned","clone_into","try_from","borrow","type_id","typeid","borrow_mut","try_into","gradient","meansquared","formatter","MeanSquared"];

searchIndex[R[0]]={"doc":E,"i":[[3,R[15],R[0],"Mean squared error.",N,N],[3,"Tensor",E,"A row-major 2D matrix of floats.",N,N],[11,"zero",E,E,0,[[[R[1]],[R[1]]],[R[2]]]],[11,"fill",E,E,0,N],[11,"get",E,E,0,[[["self"],[R[1]],[R[1]]],["option",["f32"]]]],[11,"cells",E,E,0,N],[11,"iter",E,E,0,N],[11,"dimensions",E,E,0,N],[8,"Loss",E,E,N,N],[10,"loss",E,E,1,[[["self"],[R[2]],[R[2]]],["f32"]]],[10,R[12],E,E,1,[[["self"],[R[2]],[R[2]]],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,N],[11,R[6],E,E,2,[[[U]],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[3]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,N],[11,R[6],E,E,0,[[[U]],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[3]]]],[11,"loss",E,E,2,[[["self"],[R[2]],[R[2]]],["f32"]]],[11,R[12],E,E,2,[[["self"],[R[2]],[R[2]]],[R[2]]]],[11,"eq",E,E,2,[[["self"],[R[13]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2]]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],[R[2]]]],[11,"mul",E,E,0,N],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[3]]]]],"p":[[3,"Tensor"],[8,"Loss"],[3,R[15]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);